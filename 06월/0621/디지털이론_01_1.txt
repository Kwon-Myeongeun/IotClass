--  수의 개념 1(디지털에서 사용하는 수) --

10진수      2진수             8진수           16진수
               8421code        421code       8421code
   0          0000               000              0000     0
   1          0001               001              0001     1
   2          0010               010              0010     2
   3          0011               011              0011     3
   4          0100               100              0100     4     
   5          0101               101              0101     5
   6          0110                110             0110     6
   7           0111               111             0111     7
   8           1000         001 000            1000      8
   9           1001         001 001            1001      9
  10          1010         111 111            1010      A
  11           1011  001 000 000            1011      B
  12           1100                                1100      C
  13           1101                                1101      D 
  14           1110                                1110      E
  15            1111                               1111      F
   16         10000                       0001 0000     10            
              100000                                           19
             1000000                                           1A
           10000000                                            1F
         100000000                                            20
255    11111111                                             2F
단위 : 0, 1 --> bit                                            30          AA
         0, 1 --> 4개 -> 1111 -> nibble(니블)                      AB
         nibble nibble -> byte                                           AF
        100,0000,0000 -> 1024 -> 1kbyte(1x10^3)            B0
        1k x 1k  -> 1MByte(1x 10^6)                                FF
        1M x 1k -> 1GByte(1 x 10^9)                              100
        1M x 1M -> 1TByte(1x10^12)                              1FF
                                                                                 200
                                                                                 FFF   = 0xFFF
                                                                               1000      (hexa)
                                            0001 0000 0000 0000    0x1000
                                                    1111 1111 1111
--------------------------------------------------------------------
--  수의 개념 2(디지털에서 사용하는 수) --

- 정수  : 소숫점 없음.
            1000, -999, 0, 그외 모든 값
            +값만 있는 것을    --> unsigned       --> int, long, short
            +, -값이 있는 것들 --> signed (생략)  --> int, long, short
            0
            1
            2
            3

         255 --> 256을 넘어가면 -> 오버플로우
        (8bit) : 갯수로는 256
           0
           ~
        65535
        (16bit) : 갯수로는 65536
           0
           ~
         4G
        (32bit)
           0
           ~
           ???
        (64bit)
--------------------------------------------------------------------
정수 : - 값을 기억하는 원리  : signed --> 생략해서 많이 사용(99%)
         (8bit)                        (2의 보수 사용)
         부호(맨 왼쪽에서 0: +, 1: -)
          0111 1111  --> (+)0  ~  +127   :  갯수 : 128
          0000 0000  --> (+)0
          1000 0000  --> -(  127 + 1)  = -128  : 갯수 : 128
          1111 1111  -->  -(1) = -1
          (16bit)                        (2의 보수 사용)
         부호(맨 왼쪽에서 0: +, 1: -)    --> 65536갯수
          0000 0000 0000 0000  --> +0
          0111 1111 1111 1111  --> +32767      : 32768갯수
          1000 0000 0000 0000  --> -32768       : 32768갯수
          1111 1111 1111 1111  --> -1  
--------------------------------------------------------------------
- 실수  : 소숫점 있음.  (float, double)
            0.0
            -1.0
            +1.3
             -1000.123
           부동소숫점 방식
           부호(1비트) + 지수부(8bit) + 가수부(23bit)  <-- 4byte /8byte
                                                                            (float)   (double)
--------------------------------------------------------------------
- 문자    : 'A', '0', 'a', '1', '@'  <--- 아스키코드
(char)
            [ASCII]
'0'  -->   48
'A'  -->   65 (+32)
'a'  -->    97 (-32)
' '  -->    32
ESC -->   27
enter --> 10 + 13, 10
NULL -->  0   (\0, NULL, null)
--------------------------------------------------------------------
- 문자열 : "A", "I LIKE YOU."  <- 문자, 문자, ~~~
(string)           'I' ' ' 'L' ~~~  '\0'
               A\0
--------------------------------------------------------------------
입력 , 출력 --> FORMAT
%i <--- int(정수)
%5i  --> -%5u
%u <-- int(양의 정수)
%5u
%f <--- float(실수, 4바이트)
%3.2f,  %.2f
%lf <-- double(실수, 8바이트)
%3.2lf,  %.2lf
%c  <--- char(문자)
%5c
%s  <--- string(문자열), 주소받는다.
%10s
[추가]
%p   <--- 주소(10진수) : 입력 / 출력
%#X <---주소(16진수) : 입력 / 출력
-------------------------------------











